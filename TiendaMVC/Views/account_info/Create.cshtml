@model TiendaMVC.Class.customer_info
@using TiendaMVC.Class;
@{
    ViewBag.Title = "Create";
    var CurrentCustomer = (customer_info)Session["CurrentCustomer"];

}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <table class="table" align="left" style="max-width:500px" cellspacing="0">
        <tr>
            <td>

                <div class="input-group">
                    <input id="firstname" name="firstname" type="text" placeholder="Nombre" value="@Model.firstname" class="form-control">
                    <div class="input-group-addon">
                        *
                    </div>
                </div>
                @Html.ValidationMessageFor(model => model.firstname, "", new { @class = "text-danger" })

            </td>
        </tr>
        <tr>
            <td>
                <div class="input-group">
                    <input id="lastname" name="lastname" type="text" placeholder="Apellido (Opcional)" value="@Model.lastname" class="form-control">
                    <div class="input-group-addon">
                        ()
                    </div>
                </div>
                @Html.ValidationMessageFor(model => model.lastname, "", new { @class = "text-danger" })

            </td>
        </tr>
        <tr>
            <td>
                <div class="input-group">
                    <input id="phone1" name="phone1" type="number" placeholder="Telefono" value="@Model.phone1" class="form-control">
                    <div class="input-group-addon">
                        *
                    </div>
                </div>
                @Html.ValidationMessageFor(model => model.phone1, "", new { @class = "text-danger" })

            </td>
        </tr>
        <tr>
            <td>
                <div class="input-group">
                    <div class="input-group-addon" style="background-color:azure;color:black">
                        Crédito
                    </div>
                    <input id="LimiteCredito" name="LimiteCredito" type="number" placeholder="Crédito" value="@Model.LimiteCredito" onfocus="this.value=''" class="form-control">
                    <div class="input-group-addon">
                        *
                    </div>
                    <div class="input-group-addon" style="background-color:dodgerblue;color:white;cursor:pointer" onclick="MostarAyudaCreditLimit();">
                        ?
                    </div>
                </div>
                @Html.ValidationMessageFor(model => model.LimiteCredito, "", new { @class = "text-danger" })

            </td>
        </tr>
        <tr>
            <td>
                <div class="input-group">
                    <div class="input-group-addon" style="background-color:azure;color:black">
                        Impuesto (%)
                    </div>
                    <input id="impuesto" name="impuesto" placeholder="Impuesto" value="@Model.impuesto" onfocus="this.value=''" class="form-control">

                    <div class="input-group-addon"
                         style="background-color:green;color:white;cursor:pointer"
                         onclick="MostarModalAgregarComision();">
                        +
                    </div>
                    <div class="input-group-addon" style="background-color:dodgerblue;color:white;cursor:pointer" onclick="MostarAyudaComision();">
                        ?
                    </div>
                </div>
                @Html.ValidationMessageFor(model => model.impuesto, "", new { @class = "text-danger" })

            </td>
        </tr>
        <tr>
            <td>
                <div class="input-group">
                    <input id="email" name="email" type="email" placeholder="Correo" value="@Model.email" class="form-control">
                    <div class="input-group-addon">
                        *
                    </div>
                </div>
                @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })

            </td>
        </tr>

        <tr>
            <td>
                <div class="input-group">
                    <input id="password" name="password" type="password" placeholder="Contraseña" value="@Model.password" class="form-control">
                    <div class="input-group-addon">
                        *
                    </div>
                </div>
                @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })

            </td>
        </tr>
        <tr>
            <td>
                <div class="input-group">
                    <input id="ConfirmPassword" name="ConfirmPassword" type="password" placeholder="Confirmar contraseña" value="@Model.ConfirmPassword" class="form-control">
                    <div class="input-group-addon">
                        *
                    </div>
                </div>
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })

            </td>
        </tr>
        <tr>
            <td>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Crear" onclick="MostarCargando();" class="btn btn-success btn-lg" />
                        <div class="btn btn-danger btn-lg"> @Html.ActionLink("Cancelar", "Index", null, new { Style = "color:white" }) </div>
                    </div>
                </div>
            </td>
        </tr>
    </table>
}

<!--Modal:Limite de credito-->
<div class="modal fade" id="modalAyudaCreditLimit" tabindex="-1" role="dialog" aria-labelledby="myModalLabel"
     aria-hidden="true">
    <div class="modal-dialog cascading-modal modal-avatar modal-sm" role="document">
        <!--Content-->
        <div class="modal-content">

            <!--Header-->
            <div style="text-align:center;background-color:darkorange;color:white">
                <strong>Ayuda</strong>

            </div>
            <!--Body-->
            <p style="margin:10px">
                El  crédito es el saldo que tendrá la tienda para realizar sus recargas,
                este saldo se le descontará de su saldo,
                el saldo que la tienda no use podrá ser removido para su uso en otras tiendas o para su propio uso.
            </p>

            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal">
                    <span class="glyphicon glyphicon-remove"></span>
                    <span class="hidden-xs">Cerrar</span>
                </button>

            </div>
        </div>

    </div>
    <!--/.Content-->
</div>

<!--Modal:Comisión-->
<div class="modal fade" id="modalComision" tabindex="-1" role="dialog" aria-labelledby="myModalLabel"
     aria-hidden="true">
    <div class="modal-dialog cascading-modal modal-avatar modal-sm" role="document">
        <!--Content-->
        <div class="modal-content">

            <!--Header-->
            <div style="text-align:center;background-color:darkorange;color:white">
                <strong>Ayuda</strong>

            </div>
            <!--Body-->
            <div style="margin:10px">
                En este campo se especifica la comisión que tendrá usted por cada recarga vendida de la tienda,
                así como el monto que tendrá que devengar la tienda por cada recarga vendida. Utilice el botón de
                agregar que e se encuentra a continuación del campo para facilitarle el cálculo.
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal">
                    <span class="glyphicon glyphicon-remove"></span>
                    <span class="hidden-xs">Cerrar</span>
                </button>

            </div>
        </div>

    </div>
    <!--/.Content-->
</div>

<!--Modal:Comisión-->
<div class="modal fade" id="modalAgregarComision" tabindex="-1" role="dialog" aria-labelledby="myModalLabel"
     aria-hidden="true">
    <div class="modal-dialog cascading-modal modal-avatar modal-sm" role="document">
        <!--Content-->
        <div class="modal-content">

            <!--Header-->
            <div style="text-align:center;background-color:steelblue;color:white">
                <strong>Agregar comisón</strong>
            </div>

            @{
                if (CurrentCustomer != null)
                {
                    <p style="margin:10px">
                        Su impuesto es <samp class="btn btn-default" style="color:green">@CurrentCustomer.GetComisionTopUp() %</samp> por cada recarga vendida.
                    </p>
                }

            }
            <p class="text text-bold" style="margin:10px">
                Para calcular el impuesto que se le aplicará a cada recarga vendida de la tienda especifique a continuación.
            </p>
            <p class="text text-bold" style="margin:10px">
                Para una recarga de <samp style="color:forestgreen">$20 USD</samp>  el costo sera de:
            </p>

            <div style="margin:10px" class="input-group">
                <div class="input-group-addon">
                    Costo:
                </div>
                <input id="costo" name="costo" type="number" placeholder="Costo" class="form-control">
                <div class="input-group-addon" style="background-color:dodgerblue;color:white;cursor:pointer" onclick="Calcular();">
                    Calcular
                </div>
            </div>

            <p style="margin:10px">
                <samp style="color:royalblue"><label id="lblimpuesto"></label></samp>
            </p>

            <p style="margin:10px">
                La siguiente tabla muestra tres ejemplos de comisión y costo por cada recarga vendida.
            </p>

            @*<div style="margin:10px" class="input-group">
                    <div class="input-group-addon">
                        Comisión
                    </div>
                    <input id="comision" name="comision" type="number" placeholder="Comisión" value="@CurrentCustomer.GetComisionTopUp()" class="form-control">
                    <div class="input-group-addon" style="background-color:dodgerblue;color:white;cursor:pointer" onclick="Calcular();">
                        Calcular
                    </div>
                </div>*@

            <div class="table table-responsive table-bordered">
                <table class="table">
                    <tr class="header">
                        <th>Monto</th>
                        <th>Su comisión</th>
                        <th>A entregar por la tienda(Costo)</th>
                    </tr>
                    <tr>
                        <td>20</td>
                        <td><label id="lblCom20">...</label></td>
                        <td><label id="lblEntr20">...</label></td>
                    </tr>
                    <tr>
                        <td>25</td>
                        <td><label id="lblCom25">...</label></td>
                        <td><label id="lblEntr25">...</label></td>
                    </tr>
                    <tr>
                        <td>30</td>
                        <td><label id="lblCom30">...</label></td>
                        <td><label id="lblEntr30">...</label></td>
                    </tr>
                </table>
            </div>

            <!--Body-->

            <div class="modal-footer">
                <div class="btn btn-success" data-dismiss="modal" onclick="Guardar();">
                    Guardar
                </div>
                <button type="button" class="btn btn-danger" data-dismiss="modal">
                    <span class="glyphicon glyphicon-remove"></span>
                    <span class="hidden-xs"></span>
                </button>

            </div>
        </div>

    </div>
    <!--/.Content-->
</div>

<!--Modal:Cargando-->
<div class="modal fade " id="modalCargando" tabindex="-1" role="dialog" aria-labelledby="myModalLabel"
     aria-hidden="true">
    <div class="modal-dialog cascading-modal modal-avatar modal-sm " role="document">
        <!--Content-->
        <div class="modal-content " style="align-content:center;  border-radius: 10px;">          
            <!--Body-->
            

            <table  align="center" style="padding:10px">
                <tr>
                    <td style="text-align:center">
                        <p style="font-size:20px">Por favor espere un momento estamos verificando los datos.</p> 
                        <br />
                    </td>
                </tr>
                <tr>
                    <td>
                        <img src="~/Images/cargar4.gif" />
                    </td>
                </tr>
            </table>
            
          
          
            </div>
        </div>    

    </div>
    <!--/.Content-->
</div>

<link href="~/Content/css/sweetalert.css" rel="stylesheet" />
<script src="~/Content/js/sweetalert2.min.js"></script>

<script type="text/javascript">

    function MostarCargando() {
        swal({
            title: 'Verificando información de la cuenta.',
            imageUrl: '../../Images/Cargando/cargandoHrizontal2.gif',
            imageAlt: 'Custom image',
            imageWidth: 200,
            imageHeight: 100,
            showLoaderOnConfirm: true,
            showConfirmButton: false,
            allowOutsideClick: false,
            allowEscapeKey: false,          
            animation: true
        })
      
    };

    function MostarAyudaCreditLimit() {
        $('#modalAyudaCreditLimit').modal();
    };

    function MostarAyudaComision() {
        $('#modalComision').modal();
    };

    function MostarModalAgregarComision() {
        $('#modalAgregarComision').modal();
    };

    function Calcular() {
        @*var val = $('#lblCom20')
        if ($('#lblCom20') @CurrentCustomer.GetComisionTopUp()) {
            swal("Error", "ds", "error");
        }*@
       // else {

        var impuesto = GetComision(20, $('#costo').val())
        $('#lblimpuesto').html("El impuesto de la tienda será de " + impuesto+" %");


        var costo20 = GetCosto(20, impuesto);
        var costo25 = GetCosto(25, impuesto);
        var costo30 = GetCosto(30, impuesto);


        var comis20 = costo20 - GetCosto(20, @CurrentCustomer.GetComisionTopUp());
        var comis25 = costo25 - GetCosto(25, @CurrentCustomer.GetComisionTopUp());
        var comis30 = costo30 - GetCosto(30, @CurrentCustomer.GetComisionTopUp());


        $('#lblCom20').html("$" + Math.round(comis20*100)/100 + " USD");
        $('#lblEntr20').html("$" + costo20 + " USD");

        $('#lblCom25').html("$" + Math.round(comis25 * 100) / 100 + " USD");
        $('#lblEntr25').html("$" + costo25 + " USD");

        $('#lblCom30').html("$" + Math.round(comis30 * 100) / 100  + " USD");
        $('#lblEntr30').html("$" + costo30 + " USD");

        //}
    }

    function Guardar() {
        var impuesto = GetComision(20, $('#costo').val());
        $('#impuesto').val(impuesto);
    };

    function GetCosto(monto,comision) {
        var Monto = parseInt(monto);
        var coste = 0;
        var Impuesto = parseFloat(comision);

            coste = (((Monto * Impuesto) / 100));

        return  (Math.round(coste * 100) / 100);
    };

    function GetComision(monto, costo) {
        var Monto = parseInt(monto);
        var comision = 0;

        comision = (((costo / Monto) * 100));

        return (Math.round(comision * 100) / 100);
    };


</script>

@{
    var account = Model;
    if (account != null)
    {
        if (account.ErrorHandlingCrearCuenta.faul)
        {
            <script charset="UTF-8" type="text/javascript">

                function MostarAyudaCreditLimit() {
                    $('#modalAyudaCreditLimit').modal();
                }

                function Salir() {


                    @{

                        // This is our Unicode string:

                        //byte[] bytes = System.Text.Encoding.Default.GetBytes(account.ErrorHandlingCrearCuenta.faultstring);
                        //var msg = System.Text.Encoding.UTF8.GetString(bytes);

                       // byte[] bytes = System.Text.Encoding.ASCII.GetBytes(account.ErrorHandlingCrearCuenta.faultstring);
                       // char[] chars = System.Text.Encoding.ASCII.GetChars(bytes);
                       // string msg = new String(chars);


                    }

                    swal({
                        title:"@account.ErrorHandlingCrearCuenta.faultstring",
                        type: 'error',
                        showCancelButton: false,
                        confirmButtonColor: '#3085d6',
                        confirmButtonText: 'Ok'
                    })
                   
                };


                Salir();

            </script>


        }
    }

}
